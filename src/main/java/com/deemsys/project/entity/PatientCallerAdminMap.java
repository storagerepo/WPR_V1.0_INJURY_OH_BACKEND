package com.deemsys.project.entity;

// Generated 19 Aug, 2017 10:03:05 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PatientCallerAdminMap generated by hbm2java
 */
@Entity
@Table(name = "patient_caller_admin_map", catalog = "injuryreportsdb")
public class PatientCallerAdminMap implements java.io.Serializable {

	private PatientCallerAdminMapId id;
	private CallerAdmin callerAdmin;
	private Caller caller;
	private Patient patient;
	private String notes;
	private String address;
	private BigDecimal latitude;
	private BigDecimal longitude;
	private Integer isArchived;
	private Date archivedDate;
	private String archivedDateTime;
	private Integer patientStatus;
	private Set<CallLog> callLogs = new HashSet<CallLog>(0);
	private Set<CallLog> callLogs_1 = new HashSet<CallLog>(0);

	public PatientCallerAdminMap() {
	}

	public PatientCallerAdminMap(PatientCallerAdminMapId id,
			CallerAdmin callerAdmin, Patient patient) {
		this.id = id;
		this.callerAdmin = callerAdmin;
		this.patient = patient;
	}

	public PatientCallerAdminMap(PatientCallerAdminMapId id,
			CallerAdmin callerAdmin, Caller caller, Patient patient,
			String notes, String address, BigDecimal latitude,
			BigDecimal longitude, Integer isArchived, Date archivedDate,
			String archivedDateTime, Integer patientStatus,Set<CallLog> callLogs, Set<CallLog> callLogs_1) {
		this.id = id;
		this.callerAdmin = callerAdmin;
		this.caller = caller;
		this.patient = patient;
		this.notes = notes;
		this.address = address;
		this.latitude = latitude;
		this.longitude = longitude;
		this.isArchived = isArchived;
		this.archivedDate = archivedDate;
		this.archivedDateTime = archivedDateTime;
		this.patientStatus = patientStatus;
		this.callLogs = callLogs;
		this.callLogs_1 = callLogs_1;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "patientId", column = @Column(name = "patient_id", nullable = false, length = 32)),
			@AttributeOverride(name = "callerAdminId", column = @Column(name = "caller_admin_id", nullable = false)) })
	public PatientCallerAdminMapId getId() {
		return this.id;
	}

	public void setId(PatientCallerAdminMapId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "caller_admin_id", nullable = false, insertable = false, updatable = false)
	public CallerAdmin getCallerAdmin() {
		return this.callerAdmin;
	}

	public void setCallerAdmin(CallerAdmin callerAdmin) {
		this.callerAdmin = callerAdmin;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "caller_id")
	public Caller getCaller() {
		return this.caller;
	}

	public void setCaller(Caller caller) {
		this.caller = caller;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false, insertable = false, updatable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Column(name = "notes", length = 600)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "address", length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "latitude", precision = 16, scale = 11)
	public BigDecimal getLatitude() {
		return this.latitude;
	}

	public void setLatitude(BigDecimal latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude", precision = 16, scale = 11)
	public BigDecimal getLongitude() {
		return this.longitude;
	}

	public void setLongitude(BigDecimal longitude) {
		this.longitude = longitude;
	}

	@Column(name = "is_archived")
	public Integer getIsArchived() {
		return this.isArchived;
	}

	public void setIsArchived(Integer isArchived) {
		this.isArchived = isArchived;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "archived_date", length = 10)
	public Date getArchivedDate() {
		return this.archivedDate;
	}

	public void setArchivedDate(Date archivedDate) {
		this.archivedDate = archivedDate;
	}

	@Column(name = "archived_date_time", length = 45)
	public String getArchivedDateTime() {
		return this.archivedDateTime;
	}

	public void setArchivedDateTime(String archivedDateTime) {
		this.archivedDateTime = archivedDateTime;
	}

	@Column(name = "patient_status")
	public Integer getPatientStatus() {
		return this.patientStatus;
	}

	public void setPatientStatus(Integer patientStatus) {
		this.patientStatus = patientStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientCallerAdminMap")
	public Set<CallLog> getCallLogs() {
		return this.callLogs;
	}

	public void setCallLogs(Set<CallLog> callLogs) {
		this.callLogs = callLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientCallerAdminMap")
	public Set<CallLog> getCallLogs_1() {
		return this.callLogs_1;
	}

	public void setCallLogs_1(Set<CallLog> callLogs_1) {
		this.callLogs_1 = callLogs_1;
	}
}
