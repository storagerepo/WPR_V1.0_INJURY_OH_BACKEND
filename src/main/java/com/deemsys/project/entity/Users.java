package com.deemsys.project.entity;

// Generated 19 Aug, 2017 10:03:05 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "injuryreportsdb")
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE,region="users")
public class Users implements java.io.Serializable {

	private Integer userId;
	private Roles roles;
	private String username;
	private String password;
	private Integer isEnable;
	private Integer isPasswordChanged;
	private Integer isDisclaimerAccepted;
	private String productToken;
	private Integer isPrivilegedUser;
	private Integer status;
	private Set<UserExportPreferences> userExportPreferenceses = new HashSet<UserExportPreferences>(
			0);
	private Set<LawyerAdmin> lawyerAdmins = new HashSet<LawyerAdmin>(0);
	private Set<CallerAdmin> callerAdmins = new HashSet<CallerAdmin>(0);
	private Set<Lawyer> lawyers = new HashSet<Lawyer>(0);
	private Set<UserLookupPreferences> userLookupPreferenceses = new HashSet<UserLookupPreferences>(
			0);
	private Set<Caller> callers = new HashSet<Caller>(0);
	private Set<RatingReviews> ratingReviewses = new HashSet<RatingReviews>(0);

	private Set<ActivityLogs> activityLogsesForPrimaryId = new HashSet<ActivityLogs>(
			0);
	private Set<ActivityLogs> activityLogsesForLoginId = new HashSet<ActivityLogs>(
			0);
	private Set<IpAccessList> ipAccessLists = new HashSet<IpAccessList>(0);
	public Users() {
	}

	public Users(Roles roles, String username, String password,
			Integer isEnable, Integer isPasswordChanged,
			Integer isDisclaimerAccepted, String productToken,
			Integer isPrivilegedUser, Integer status, Integer isTour,
			Set<UserExportPreferences> userExportPreferenceses,
			Set<LawyerAdmin> lawyerAdmins, Set<CallerAdmin> callerAdmins,
			Set<Lawyer> lawyers,
			Set<UserLookupPreferences> userLookupPreferenceses,
			Set<Caller> callers, Set<RatingReviews> ratingReviewses,
			Set<ActivityLogs> activityLogsesForPrimaryId,
			Set<ActivityLogs> activityLogsesForLoginId,
			Set<IpAccessList> ipAccessLists) {
		this.roles = roles;
		this.username = username;
		this.password = password;
		this.isEnable = isEnable;
		this.isPasswordChanged = isPasswordChanged;
		this.isDisclaimerAccepted = isDisclaimerAccepted;
		this.productToken = productToken;
		this.isPrivilegedUser = isPrivilegedUser;
		this.status = status;
		this.userExportPreferenceses = userExportPreferenceses;
		this.lawyerAdmins = lawyerAdmins;
		this.callerAdmins = callerAdmins;
		this.lawyers = lawyers;
		this.userLookupPreferenceses = userLookupPreferenceses;
		this.callers = callers;
		this.ratingReviewses = ratingReviewses;
		this.activityLogsesForPrimaryId=activityLogsesForPrimaryId;
		this.activityLogsesForLoginId=activityLogsesForLoginId;
		this.ipAccessLists = ipAccessLists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id")
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "username", length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "is_enable")
	public Integer getIsEnable() {
		return this.isEnable;
	}

	public void setIsEnable(Integer isEnable) {
		this.isEnable = isEnable;
	}

	@Column(name = "is_password_changed")
	public Integer getIsPasswordChanged() {
		return this.isPasswordChanged;
	}

	public void setIsPasswordChanged(Integer isPasswordChanged) {
		this.isPasswordChanged = isPasswordChanged;
	}

	@Column(name = "is_disclaimer_accepted")
	public Integer getIsDisclaimerAccepted() {
		return this.isDisclaimerAccepted;
	}

	public void setIsDisclaimerAccepted(Integer isDisclaimerAccepted) {
		this.isDisclaimerAccepted = isDisclaimerAccepted;
	}

	@Column(name = "product_token", length = 45)
	public String getProductToken() {
		return this.productToken;
	}

	public void setProductToken(String productToken) {
		this.productToken = productToken;
	}

	@Column(name = "is_privileged_user")
	public Integer getIsPrivilegedUser() {
		return this.isPrivilegedUser;
	}

	public void setIsPrivilegedUser(Integer isPrivilegedUser) {
		this.isPrivilegedUser = isPrivilegedUser;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserExportPreferences> getUserExportPreferenceses() {
		return this.userExportPreferenceses;
	}

	public void setUserExportPreferenceses(
			Set<UserExportPreferences> userExportPreferenceses) {
		this.userExportPreferenceses = userExportPreferenceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<LawyerAdmin> getLawyerAdmins() {
		return this.lawyerAdmins;
	}

	public void setLawyerAdmins(Set<LawyerAdmin> lawyerAdmins) {
		this.lawyerAdmins = lawyerAdmins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CallerAdmin> getCallerAdmins() {
		return this.callerAdmins;
	}

	public void setCallerAdmins(Set<CallerAdmin> callerAdmins) {
		this.callerAdmins = callerAdmins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Lawyer> getLawyers() {
		return this.lawyers;
	}

	public void setLawyers(Set<Lawyer> lawyers) {
		this.lawyers = lawyers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserLookupPreferences> getUserLookupPreferenceses() {
		return this.userLookupPreferenceses;
	}

	public void setUserLookupPreferenceses(
			Set<UserLookupPreferences> userLookupPreferenceses) {
		this.userLookupPreferenceses = userLookupPreferenceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Caller> getCallers() {
		return this.callers;
	}

	public void setCallers(Set<Caller> callers) {
		this.callers = callers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<RatingReviews> getRatingReviewses() {
		return this.ratingReviewses;
	}

	public void setRatingReviewses(Set<RatingReviews> ratingReviewses) {
		this.ratingReviewses = ratingReviewses;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByPrimaryId")
	public Set<ActivityLogs> getActivityLogsesForPrimaryId() {
		return this.activityLogsesForPrimaryId;
	}

	public void setActivityLogsesForPrimaryId(
			Set<ActivityLogs> activityLogsesForPrimaryId) {
		this.activityLogsesForPrimaryId = activityLogsesForPrimaryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByLoginId")
	public Set<ActivityLogs> getActivityLogsesForLoginId() {
		return this.activityLogsesForLoginId;
	}

	public void setActivityLogsesForLoginId(
			Set<ActivityLogs> activityLogsesForLoginId) {
		this.activityLogsesForLoginId = activityLogsesForLoginId;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<IpAccessList> getIpAccessLists() {
		return this.ipAccessLists;
	}

	public void setIpAccessLists(Set<IpAccessList> ipAccessLists) {
		this.ipAccessLists = ipAccessLists;
	}
}
