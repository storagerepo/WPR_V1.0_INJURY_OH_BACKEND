<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/security/oauth2	
	http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


	


<!-- Normal Form Login -->
<http auto-config="true" use-expressions="true">
<!-- <intercept-url pattern="/Patient/**" access="ROLE_PATIENT" /> -->
		<!-- access denied page -->
		<access-denied-handler error-page="/redirect" />
		<form-login 
		    login-page="/user-login" 
		    default-target-url="/welcome"
			authentication-failure-url="/login-failed" 
			username-parameter="username"
			password-parameter="password" />
		<session-management invalid-session-url="/logout" />
		<logout logout-success-url="/logout" />
				<!-- enable csrf protection -->
		
	</http>

	<!-- This is simple authentication manager, with a hard coded user/password 
		combination. We can replace this with a user defined service to get few users 
		credentials from DB -->
	<authentication-manager alias="authenticationManager"
		xmlns="http://www.springframework.org/schema/security">
	</authentication-manager>


</beans:beans>
